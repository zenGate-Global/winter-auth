name: CI

on:
  push:
    branches: ["main", "master", "develop"]
  pull_request:
    branches: ["main", "master"]

concurrency:
  group: ci-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  commitlint:
    name: Validate Commit Messages
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          
      - name: Install commitlint
        run: |
          npm install --save-dev @commitlint/config-conventional @commitlint/cli
          
      - name: Validate PR commits
        run: npx commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose

  check:
    name: Code Quality & Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: bun install --frozen-lockfile
        
      - name: Build
        run: bun run build
        
      - name: Test
        run: bun run test
        
      - name: Test Coverage
        run: bun run test:coverage

  node-compatibility:
    name: Node.js Compatibility
    runs-on: ubuntu-latest
    needs: check
    if: success()
    permissions:
      contents: read

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Build
        run: bun run build
      - name: Test
        run: bun test

  bun-compatibility:
    name: Bun Compatibility
    runs-on: ubuntu-latest
    needs: check
    if: success()
    permissions:
      contents: read

    strategy:
      matrix:
        bun-version: [latest]

    steps:
      - uses: actions/checkout@v4
      - name: Use Bun ${{ matrix.bun-version }}
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Build
        run: bun run build
      - name: Test
        run: bun test